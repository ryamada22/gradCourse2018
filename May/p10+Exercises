
R version 3.5.0 (2018-04-23) -- "Joy in Playing"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: i386-w64-mingw32/i386 (32-bit)

R は、自由なソフトウェアであり、「完全に無保証」です。 
一定の条件に従えば、自由にこれを再配布することができます。 
配布条件の詳細に関しては、'license()' あるいは 'licence()' と入力してください。 

R は多くの貢献者による共同プロジェクトです。 
詳しくは 'contributors()' と入力してください。 
また、R や R のパッケージを出版物で引用する際の形式については 
'citation()' と入力してください。 

'demo()' と入力すればデモをみることができます。 
'help()' とすればオンラインヘルプが出ます。 
'help.start()' で HTML ブラウザによるヘルプがみられます。 
'q()' と入力すれば R を終了します。 

 [以前にセーブされたワークスペースを復帰します] 

> library(downloader)
> ata/femaleMiceWeights.csv"
+ url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extd\ata/femaleMiceWeights.csv"
 エラー:  想定外の文字列定数です  in:
"ata/femaleMiceWeights.csv"
url <- ""
> url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extd\ata/femaleMiceWeights.csv"
> filename <- "femaleMiceWeights.csv"
> download(url, destfile=filename)
 URL 'https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdta/femaleMiceWeights.csv' を試しています 
 download.file(url, method = method, ...) でエラー: 
   URL 'https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdta/femaleMiceWeights.csv' を開けません 
> filename <- "femaleMiceWeights.csv"
> url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleMiceWeights.csv"
> download(url, destfile=filename)
 URL 'https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleMiceWeights.csv' を試しています 
Content type 'text/plain; charset=utf-8' length 252 bytes
downloaded 252 bytes

> read.csv("femaleMiceWeights.csv")
   Diet Bodyweight
1  chow      21.51
2  chow      28.14
3  chow      24.04
4  chow      23.45
5  chow      23.68
6  chow      19.79
7  chow      28.40
8  chow      20.98
9  chow      22.51
10 chow      20.10
11 chow      26.91
12 chow      26.25
13   hf      25.71
14   hf      26.37
15   hf      22.80
16   hf      25.34
17   hf      24.97
18   hf      28.14
19   hf      29.58
20   hf      30.92
21   hf      34.02
22   hf      21.90
23   hf      31.53
24   hf      20.73
> x <- "femaleMiceWeights.csv"
> X[12, Bodyweight]
 エラー:  オブジェクト 'X' がありません 
> x[12, Bodyweight]
 エラー:  オブジェクト 'Bodyweight' がありません 
> x[12, 2]
 x[12, 2] でエラー:  次元数が正しくありません 
> dat <- read.csv(x)
> head(dat)
  Diet Bodyweight
1 chow      21.51
2 chow      28.14
3 chow      24.04
4 chow      23.45
5 chow      23.68
6 chow      19.79
> x[12]
[1] NA
> x[1]
[1] "femaleMiceWeights.csv"
> filename[1]
[1] "femaleMiceWeights.csv"
> x <- read.csv(filename)
> x[1]
   Diet
1  chow
2  chow
3  chow
4  chow
5  chow
6  chow
7  chow
8  chow
9  chow
10 chow
11 chow
12 chow
13   hf
14   hf
15   hf
16   hf
17   hf
18   hf
19   hf
20   hf
21   hf
22   hf
23   hf
24   hf
> x[12, Bodyweight]
 `[.data.frame`(x, 12, Bodyweight) でエラー: 
   オブジェクト 'Bodyweight' がありません 
> 
> 
> x[12, 2]
[1] 26.25
> x[11,]
   Diet Bodyweight
11 chow      26.91
> x[$11]
 エラー:  予想外の '$' です  in "x[$"
> 
> x$11
 エラー:  想定外の数値定数です  in "x$11"
> x$2
 エラー:  想定外の数値定数です  in "x$2"
> x$second
NULL
> x$first
NULL
> x[1]
   Diet
1  chow
2  chow
3  chow
4  chow
5  chow
6  chow
7  chow
8  chow
9  chow
10 chow
11 chow
12 chow
13   hf
14   hf
15   hf
16   hf
17   hf
18   hf
19   hf
20   hf
21   hf
22   hf
23   hf
24   hf
> x$first
NULL
> x$1
 エラー:  想定外の数値定数です  in "x$1"
> x $ 1
 エラー:  想定外の数値定数です  in "x $ 1"
> x
   Diet Bodyweight
1  chow      21.51
2  chow      28.14
3  chow      24.04
4  chow      23.45
5  chow      23.68
6  chow      19.79
7  chow      28.40
8  chow      20.98
9  chow      22.51
10 chow      20.10
11 chow      26.91
12 chow      26.25
13   hf      25.71
14   hf      26.37
15   hf      22.80
16   hf      25.34
17   hf      24.97
18   hf      28.14
19   hf      29.58
20   hf      30.92
21   hf      34.02
22   hf      21.90
23   hf      31.53
24   hf      20.73
> 
> x$Bodyweight
 [1] 21.51 28.14 24.04 23.45 23.68 19.79 28.40 20.98 22.51 20.10 26.91 26.25 25.71
[14] 26.37 22.80 25.34 24.97 28.14 29.58 30.92 34.02 21.90 31.53 20.73
> x$Bodyweight[11]
[1] 26.91
> 
> length(x)
[1] 2
> length(x$Bodyweight)
[1] 24
> length(x$Bodyweight)
[1] 24
> length(x$Bodyweight)
[1] 24
> 
> seq(3,7)
[1] 3 4 5 6 7
> x[3:7]
 `[.data.frame`(x, 3:7) でエラー: undefined columns selected
> 
> x(3:7)
 x(3:7) でエラー:  関数 "x" を見つけることができませんでした 
> x[seq(3,7)]
 `[.data.frame`(x, seq(3, 7)) でエラー: undefined columns selected
> head(x, 1:12)
 head.data.frame(x, 1:12) でエラー: length(n) == 1L is not TRUE
> Bodyweight = 1:12
> filter(x, Diet=="chow")
 filter(x, Diet == "chow") でエラー:  オブジェクト 'Diet' がありません 
> x
   Diet Bodyweight
1  chow      21.51
2  chow      28.14
3  chow      24.04
4  chow      23.45
5  chow      23.68
6  chow      19.79
7  chow      28.40
8  chow      20.98
9  chow      22.51
10 chow      20.10
11 chow      26.91
12 chow      26.25
13   hf      25.71
14   hf      26.37
15   hf      22.80
16   hf      25.34
17   hf      24.97
18   hf      28.14
19   hf      29.58
20   hf      30.92
21   hf      34.02
22   hf      21.90
23   hf      31.53
24   hf      20.73
> head(x, n=12)
   Diet Bodyweight
1  chow      21.51
2  chow      28.14
3  chow      24.04
4  chow      23.45
5  chow      23.68
6  chow      19.79
7  chow      28.40
8  chow      20.98
9  chow      22.51
10 chow      20.10
11 chow      26.91
12 chow      26.25
> head(x, n=(Diet=="chow"))
 length(n) == 1L でエラー:  オブジェクト 'Diet' がありません 
> x("chow")
 x("chow") でエラー:  関数 "x" を見つけることができませんでした 
> x(Diet="chow")
 x(Diet = "chow") でエラー:  関数 "x" を見つけることができませんでした 
> x[Diet="chow"]
 `[.data.frame`(x, Diet = "chow") でエラー: 
   使われていない引数 (Diet = "chow") 
> x[Diet=="chow"]
 `[.data.frame`(x, Diet == "chow") でエラー: 
   オブジェクト 'Diet' がありません 
> x[2=="chow"]
 0 列 24 行のデータフレーム 
> length(x$Bodyweight)
[1] 24
> length(x$Diet)
[1] 24
> length(x$Diet="chow")
 エラー:  予想外の '=' です  in "length(x$Diet="
> length(x$Diet=="chow")
[1] 24
> x[which(x[, 1] == "chow"), ]
   Diet Bodyweight
1  chow      21.51
2  chow      28.14
3  chow      24.04
4  chow      23.45
5  chow      23.68
6  chow      19.79
7  chow      28.40
8  chow      20.98
9  chow      22.51
10 chow      20.10
11 chow      26.91
12 chow      26.25
> x
   Diet Bodyweight
1  chow      21.51
2  chow      28.14
3  chow      24.04
4  chow      23.45
5  chow      23.68
6  chow      19.79
7  chow      28.40
8  chow      20.98
9  chow      22.51
10 chow      20.10
11 chow      26.91
12 chow      26.25
13   hf      25.71
14   hf      26.37
15   hf      22.80
16   hf      25.34
17   hf      24.97
18   hf      28.14
19   hf      29.58
20   hf      30.92
21   hf      34.02
22   hf      21.90
23   hf      31.53
24   hf      20.73
> x$Diet
 [1] chow chow chow chow chow chow chow chow chow chow chow chow hf   hf   hf  
[16] hf   hf   hf   hf   hf   hf   hf   hf   hf  
Levels: chow hf
> 
> x$Diet["chow"]
[1] <NA>
Levels: chow hf
> x[1:12]
 `[.data.frame`(x, 1:12) でエラー: undefined columns selected
> x[1:12, ]
   Diet Bodyweight
1  chow      21.51
2  chow      28.14
3  chow      24.04
4  chow      23.45
5  chow      23.68
6  chow      19.79
7  chow      28.40
8  chow      20.98
9  chow      22.51
10 chow      20.10
11 chow      26.91
12 chow      26.25
> y <- x[1:12, ]
> y$Bodyweight
 [1] 21.51 28.14 24.04 23.45 23.68 19.79 28.40 20.98 22.51 20.10 26.91 26.25
> z <- y$Bodyweight
> mean(z)
[1] 23.81333
> x[13:24, ]
   Diet Bodyweight
13   hf      25.71
14   hf      26.37
15   hf      22.80
16   hf      25.34
17   hf      24.97
18   hf      28.14
19   hf      29.58
20   hf      30.92
21   hf      34.02
22   hf      21.90
23   hf      31.53
24   hf      20.73
> y <- x[13:24, ]
> y$Bodyweight
 [1] 25.71 26.37 22.80 25.34 24.97 28.14 29.58 30.92 34.02 21.90 31.53 20.73
> mean(y$Bodyweight)
[1] 26.83417
> ?sample
starting httpd help server ... done
> n <- 13:24
 警告メッセージ: 
 file(out, "wt") で: 
   ファイル 'C:\Users\pinpi\AppData\Local\Temp\RtmpeGriIk\Rhttpd87686d9f2c10' を開くことができません: No such file or directory 
> n <- 13
> n <- "13:24"
> m <- 1
> sample(n, m, replace=TRUE)
[1] "13:24"
> n <- [13:24]
 エラー:  予想外の '[' です  in "n <- ["
> n
[1] "13:24"
> n <- seq(13:24)
> n
 [1]  1  2  3  4  5  6  7  8  9 10 11 12
> sample(x[13:24, ], 1, )
   Diet
13   hf
14   hf
15   hf
16   hf
17   hf
18   hf
19   hf
20   hf
21   hf
22   hf
23   hf
24   hf
> sample(x[13:24, ], m, )
   Bodyweight
13      25.71
14      26.37
15      22.80
16      25.34
17      24.97
18      28.14
19      29.58
20      30.92
21      34.02
22      21.90
23      31.53
24      20.73
> sample(x[13:24, ], 2, )
   Bodyweight Diet
13      25.71   hf
14      26.37   hf
15      22.80   hf
16      25.34   hf
17      24.97   hf
18      28.14   hf
19      29.58   hf
20      30.92   hf
21      34.02   hf
22      21.90   hf
23      31.53   hf
24      20.73   hf
> sample(x[13:24, ], ,1)
   Diet Bodyweight
13   hf      25.71
14   hf      26.37
15   hf      22.80
16   hf      25.34
17   hf      24.97
18   hf      28.14
19   hf      29.58
20   hf      30.92
21   hf      34.02
22   hf      21.90
23   hf      31.53
24   hf      20.73
> 
> a <- 13:24
> a
 [1] 13 14 15 16 17 18 19 20 21 22 23 24
> sample(a, 1 )
[1] 16
> x[16]
 `[.data.frame`(x, 16) でエラー: undefined columns selected
> x[16, ]
   Diet Bodyweight
16   hf      25.34
> set.seed(1)
> set.seed:sample(a, 1 )
 set.seed:sample(a, 1) でエラー:  引数が NA/NaN です 
> set.seed;sample(a, 1 )
function (seed, kind = NULL, normal.kind = NULL) 
{
    kinds <- c("Wichmann-Hill", "Marsaglia-Multicarry", "Super-Duper", 
        "Mersenne-Twister", "Knuth-TAOCP", "user-supplied", "Knuth-TAOCP-2002", 
        "L'Ecuyer-CMRG", "default")
    n.kinds <- c("Buggy Kinderman-Ramage", "Ahrens-Dieter", "Box-Muller", 
        "user-supplied", "Inversion", "Kinderman-Ramage", "default")
    if (length(kind)) {
        if (!is.character(kind) || length(kind) > 1L) 
            stop("'kind' must be a character string of length 1 (RNG to be used).")
        if (is.na(i.knd <- pmatch(kind, kinds) - 1L)) 
            stop(gettextf("'%s' is not a valid abbreviation of an RNG", 
                kind), domain = NA)
        if (i.knd == length(kinds) - 1L) 
            i.knd <- -1L
    }
    else i.knd <- NULL
    if (!is.null(normal.kind)) {
        if (!is.character(normal.kind) || length(normal.kind) != 
            1L) 
            stop("'normal.kind' must be a character string of length 1")
        normal.kind <- pmatch(normal.kind, n.kinds) - 1L
        if (is.na(normal.kind)) 
            stop(gettextf("'%s' is not a valid choice", normal.kind), 
                domain = NA)
        if (normal.kind == 0L) 
            stop("buggy version of Kinderman-Ramage generator is not allowed", 
                domain = NA)
        if (normal.kind == length(n.kinds) - 1L) 
            normal.kind <- -1L
    }
    .Internal(set.seed(seed, i.knd, normal.kind))
}
<bytecode: 0x0b46fc20>
<environment: namespace:base>
[1] 17
> set.seed;sample(a, 1 )
function (seed, kind = NULL, normal.kind = NULL) 
{
    kinds <- c("Wichmann-Hill", "Marsaglia-Multicarry", "Super-Duper", 
        "Mersenne-Twister", "Knuth-TAOCP", "user-supplied", "Knuth-TAOCP-2002", 
        "L'Ecuyer-CMRG", "default")
    n.kinds <- c("Buggy Kinderman-Ramage", "Ahrens-Dieter", "Box-Muller", 
        "user-supplied", "Inversion", "Kinderman-Ramage", "default")
    if (length(kind)) {
        if (!is.character(kind) || length(kind) > 1L) 
            stop("'kind' must be a character string of length 1 (RNG to be used).")
        if (is.na(i.knd <- pmatch(kind, kinds) - 1L)) 
            stop(gettextf("'%s' is not a valid abbreviation of an RNG", 
                kind), domain = NA)
        if (i.knd == length(kinds) - 1L) 
            i.knd <- -1L
    }
    else i.knd <- NULL
    if (!is.null(normal.kind)) {
        if (!is.character(normal.kind) || length(normal.kind) != 
            1L) 
            stop("'normal.kind' must be a character string of length 1")
        normal.kind <- pmatch(normal.kind, n.kinds) - 1L
        if (is.na(normal.kind)) 
            stop(gettextf("'%s' is not a valid choice", normal.kind), 
                domain = NA)
        if (normal.kind == 0L) 
            stop("buggy version of Kinderman-Ramage generator is not allowed", 
                domain = NA)
        if (normal.kind == length(n.kinds) - 1L) 
            normal.kind <- -1L
    }
    .Internal(set.seed(seed, i.knd, normal.kind))
}
<bytecode: 0x0b46fc20>
<environment: namespace:base>
[1] 19
> x[16, ]
   Diet Bodyweight
16   hf      25.34
> set.seed;sample(a, 1 )
function (seed, kind = NULL, normal.kind = NULL) 
{
    kinds <- c("Wichmann-Hill", "Marsaglia-Multicarry", "Super-Duper", 
        "Mersenne-Twister", "Knuth-TAOCP", "user-supplied", "Knuth-TAOCP-2002", 
        "L'Ecuyer-CMRG", "default")
    n.kinds <- c("Buggy Kinderman-Ramage", "Ahrens-Dieter", "Box-Muller", 
        "user-supplied", "Inversion", "Kinderman-Ramage", "default")
    if (length(kind)) {
        if (!is.character(kind) || length(kind) > 1L) 
            stop("'kind' must be a character string of length 1 (RNG to be used).")
        if (is.na(i.knd <- pmatch(kind, kinds) - 1L)) 
            stop(gettextf("'%s' is not a valid abbreviation of an RNG", 
                kind), domain = NA)
        if (i.knd == length(kinds) - 1L) 
            i.knd <- -1L
    }
    else i.knd <- NULL
    if (!is.null(normal.kind)) {
        if (!is.character(normal.kind) || length(normal.kind) != 
            1L) 
            stop("'normal.kind' must be a character string of length 1")
        normal.kind <- pmatch(normal.kind, n.kinds) - 1L
        if (is.na(normal.kind)) 
            stop(gettextf("'%s' is not a valid choice", normal.kind), 
                domain = NA)
        if (normal.kind == 0L) 
            stop("buggy version of Kinderman-Ramage generator is not allowed", 
                domain = NA)
        if (normal.kind == length(n.kinds) - 1L) 
            normal.kind <- -1L
    }
    .Internal(set.seed(seed, i.knd, normal.kind))
}
<bytecode: 0x0b46fc20>
<environment: namespace:base>
[1] 23
> set.seed; sample(a, 1 )
function (seed, kind = NULL, normal.kind = NULL) 
{
    kinds <- c("Wichmann-Hill", "Marsaglia-Multicarry", "Super-Duper", 
        "Mersenne-Twister", "Knuth-TAOCP", "user-supplied", "Knuth-TAOCP-2002", 
        "L'Ecuyer-CMRG", "default")
    n.kinds <- c("Buggy Kinderman-Ramage", "Ahrens-Dieter", "Box-Muller", 
        "user-supplied", "Inversion", "Kinderman-Ramage", "default")
    if (length(kind)) {
        if (!is.character(kind) || length(kind) > 1L) 
            stop("'kind' must be a character string of length 1 (RNG to be used).")
        if (is.na(i.knd <- pmatch(kind, kinds) - 1L)) 
            stop(gettextf("'%s' is not a valid abbreviation of an RNG", 
                kind), domain = NA)
        if (i.knd == length(kinds) - 1L) 
            i.knd <- -1L
    }
    else i.knd <- NULL
    if (!is.null(normal.kind)) {
        if (!is.character(normal.kind) || length(normal.kind) != 
            1L) 
            stop("'normal.kind' must be a character string of length 1")
        normal.kind <- pmatch(normal.kind, n.kinds) - 1L
        if (is.na(normal.kind)) 
            stop(gettextf("'%s' is not a valid choice", normal.kind), 
                domain = NA)
        if (normal.kind == 0L) 
            stop("buggy version of Kinderman-Ramage generator is not allowed", 
                domain = NA)
        if (normal.kind == length(n.kinds) - 1L) 
            normal.kind <- -1L
    }
    .Internal(set.seed(seed, i.knd, normal.kind))
}
<bytecode: 0x0b46fc20>
<environment: namespace:base>
[1] 15
> set.seed; sample(a, 1 )
function (seed, kind = NULL, normal.kind = NULL) 
{
    kinds <- c("Wichmann-Hill", "Marsaglia-Multicarry", "Super-Duper", 
        "Mersenne-Twister", "Knuth-TAOCP", "user-supplied", "Knuth-TAOCP-2002", 
        "L'Ecuyer-CMRG", "default")
    n.kinds <- c("Buggy Kinderman-Ramage", "Ahrens-Dieter", "Box-Muller", 
        "user-supplied", "Inversion", "Kinderman-Ramage", "default")
    if (length(kind)) {
        if (!is.character(kind) || length(kind) > 1L) 
            stop("'kind' must be a character string of length 1 (RNG to be used).")
        if (is.na(i.knd <- pmatch(kind, kinds) - 1L)) 
            stop(gettextf("'%s' is not a valid abbreviation of an RNG", 
                kind), domain = NA)
        if (i.knd == length(kinds) - 1L) 
            i.knd <- -1L
    }
    else i.knd <- NULL
    if (!is.null(normal.kind)) {
        if (!is.character(normal.kind) || length(normal.kind) != 
            1L) 
            stop("'normal.kind' must be a character string of length 1")
        normal.kind <- pmatch(normal.kind, n.kinds) - 1L
        if (is.na(normal.kind)) 
            stop(gettextf("'%s' is not a valid choice", normal.kind), 
                domain = NA)
        if (normal.kind == 0L) 
            stop("buggy version of Kinderman-Ramage generator is not allowed", 
                domain = NA)
        if (normal.kind == length(n.kinds) - 1L) 
            normal.kind <- -1L
    }
    .Internal(set.seed(seed, i.knd, normal.kind))
}
<bytecode: 0x0b46fc20>
<environment: namespace:base>
[1] 23
> set.seed(1); sample(a, 1 )
[1] 16
> x[16, ]
   Diet Bodyweight
16   hf      25.34
> set.seed(1); sample(a, 1 )
[1] 16
> x[16, ]
   Diet Bodyweight
16   hf      25.34
> q()
> 
